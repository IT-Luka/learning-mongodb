#+TITLE: M001
#+AUTHOR: Luka MarkoviÄ‡
#+STARTUP: overview

*   TOC :toc_3:
-   [[#commands][commands]]
  -  [[#query][query]]
    - [[#query-operators][query operators]]
  -  [[#update][update]]
    -  [[#update-operators][update operators]]
    -  [[#array-operators][array operators]]
  -  [[#delete][delete]]

*   commands
show dbs and show collections
#+begin_src js
show dbs
show collections
#+end_src

use 'sample_training' db
#+begin_src js
use sample_training 
#+end_src

count results
#+begin_src js
.count()
db.collection.find({<field>:<value>,<field2>:<value2>,...}).count()
#+end_src

insert
#+begin_src js
insert()
db.collection.insert([{<field>:<value>,<field2>:<value2>,...])
#+end_src

**  query
find in collection
#+begin_src js
find()
db.collection.find({<field>:<value>,<field2>:<value2>,...})
#+end_src

find one document
#+begin_src js
findOne()
#+end_src

*** query operators
****    comparison operators
{<field>:{<operator>: <value>}}

equal to ==
#+begin_src js
$eq
#+end_src
not equal to !=
#+begin_src js
$ne
#+end_src

greater than >
#+begin_src js
$gt
#+end_src
less than <
#+begin_src js
$lt
#+end_src

greater than or equal to >=
#+begin_src js
$gte
#+end_src
less than or equal to <=
#+begin_src js
$lte
#+end_src
****    logic operators
{'<operator>' : [{statement1},{statement2},...]}
{$not : {<clause>}}

and &&
#+begin_src js
$and
#+end_src
or ||
#+begin_src js
$or
#+end_src
nor
#+begin_src js
$nor
#+end_src
not !
#+begin_src js
$not
#+end_src
****    expressions
{ $expr: { <expression> } }
#+begin_src js
{'$expr': {'$eq'['$start station name', '$end station id']}}
#+end_src

aggregation syntax: { <operator>: { <field>, <value> } }
#+begin_src js
{'$gt': ['$tripduration', 1200]}
#+end_src
**  update
update one
#+begin_src js
updateOne()
#+end_src

update many
#+begin_src js
updateMany()
#+end_src

***  update operators
increment value
#+begin_src js
{'$inc':{<field>:<value>,<field2>:<value2>,...}}
db.collection.updateMany({'selectfield':'selectvalue'},{'$inc': {'pop':10, '<field2>': <increment value>, ...}})
#+end_src

set value
#+begin_src js
{'$set':{<field>:<value>,<field2>:<value2>,...}}
#+end_src

push value
#+begin_src js
{'$push':{<field>:<value>,<field2>:<value2>,...}}
#+end_src

***  array operators
add element to array or turns a field into an array field
#+begin_src js
$push
#+end_src
**  delete
delete one *only goood whend querying by _id*
#+begin_src js
deleteOne()
db.collection.deleteOne({<field>:<value>})
#+end_src

delete many
#+begin_src js
deleteMany()
#+end_src

delete collection
#+begin_src js
db.collection.drop()
#+end_src
